<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0">
  <channel>
    <title>InsertAfter : Nicolas Froidure&#39;s Blog, Fullstack JavaScript Developper</title>
    <description>Learn more about me</description>
    <link>https://insertafter.com/en/blog/index.html</link>
    <lastBuildDate>2021-01-16T11:08:53.568Z</lastBuildDate>
    <pubDate>2021-01-16T11:08:53.568Z</pubDate>
    <ttl>1800</ttl>

    



    <item>
      <title>Kafka with docker-compose</title>
      <description>Run Apache Kafka locally with docker-compose.</description>
      <link>https://insertafter.com/en/blog/kafka_docker_compose.html</link>
      <pubDate>2020-12-31T13:07:32.000Z</pubDate>
    </item>



    <item>
      <title>Unobtrusive Dependency Injection with Knifecycle</title>
      <description>Knifecycle is a NodeJS module aimed to provide DI power without the headaches..</description>
      <link>https://insertafter.com/en/blog/unobstrusive_dependency_injection_with_knifecycle.html</link>
      <pubDate>2019-01-26T12:00:00.000Z</pubDate>
    </item>



    <item>
      <title>My VSCode Configuration</title>
      <description>A quick tour of my VSCode configuration.</description>
      <link>https://insertafter.com/en/blog/my_vscode_configuration.html</link>
      <pubDate>2019-01-03T20:00:00.000Z</pubDate>
    </item>



    <item>
      <title>Normalizing JSON Data from REST APIs</title>
      <description>Very few developer takes the time to think about
 how they structure their JSON at the very beginning of the
 project, it is the best moment to do so though.</description>
      <link>https://insertafter.com/en/blog/json_structure_for_rest_apis.html</link>
      <pubDate>2017-03-03T10:07:32.000Z</pubDate>
    </item>



    <item>
      <title>Considerations for Automatic Generation of API Clients</title>
      <description>No one should loose time writing code that can be generated 
automatically. Here are some tips on how I did it.</description>
      <link>https://insertafter.com/en/blog/considerations_for_generating_api_clients.html</link>
      <pubDate>2017-02-19T15:00:00.000Z</pubDate>
    </item>



    <item>
      <title>Project Webservices at 7Digital</title>
      <description>A sum-up of my last 6 months working at 7Digital</description>
      <link>https://insertafter.com/en/blog/webservices_at_7digital.html</link>
      <pubDate>2017-02-07T13:09:30.000Z</pubDate>
    </item>



    <item>
      <title>Meta NPM Packages</title>
      <description>On managing a lot of NPM modules.</description>
      <link>https://insertafter.com/en/blog/metapak.html</link>
      <pubDate>2017-02-02T04:29:10.000Z</pubDate>
    </item>



    <item>
      <title>Toward a stricter query string parser</title>
      <description>With most query string parsers, a lot of URIs can point to the same
 content. It not only mess you cache system but make your logs less expressive.
 To avoid those problems I just wrote a stricter query string parser.</description>
      <link>https://insertafter.com/en/blog/toward_stricter_query_string_parser.html</link>
      <pubDate>2016-12-12T19:50:52.000Z</pubDate>
    </item>



    <item>
      <title>Designing HTTP REST APIs with NodeJS</title>
      <description>Designing good HTTP services is still a hard thing despite the many
 tools you can find to make them with NodeJS. I&#39;m trying to define a formal
 approach to architecture them by embracing the HTTP protocol nature and the
 RESTful principles.</description>
      <link>https://insertafter.com/en/blog/http_rest_apis_with_nodejs.html</link>
      <pubDate>2016-11-12T09:50:52.000Z</pubDate>
    </item>



    <item>
      <title>No more middlewares, please</title>
      <description>Why I think middlewares are a bad thing, how I am replacing them.</description>
      <link>https://insertafter.com/en/blog/no_more_middlewares.html</link>
      <pubDate>2016-11-05T19:50:20.000Z</pubDate>
    </item>



    <item>
      <title>Let&#39;s Subset JavaScript</title>
      <description>Currently, it&#39;s all about JavaScript and how to compile, transpile
 and every &quot;ile&quot;y things you could imagine. But what about making JavaScript
 smaller?</description>
      <link>https://insertafter.com/en/blog/lets_subset_javascript.html</link>
      <pubDate>2015-07-10T13:38:03.000Z</pubDate>
    </item>



    <item>
      <title>Create Native NodeJS Modules Fallbacking To Emscripten Ones</title>
      <description>Suprisingly, creating a native module is not that hard. Making it 
 compile on any platform and gracefully handle compilation fails is a bit more 
 tricky.</description>
      <link>https://insertafter.com/en/blog/native-node-module.html</link>
      <pubDate>2015-06-26T15:50:23.000Z</pubDate>
    </item>



    <item>
      <title>Watching Your NodeJS Projects&#39;s Dependencies The Easy Way</title>
      <description>Using watchdeps to automagically watch your project&#39;s dependencies.</description>
      <link>https://insertafter.com/en/blog/watchdeps.html</link>
      <pubDate>2015-03-08T10:07:32.000Z</pubDate>
    </item>



    <item>
      <title>REST API access control with reaccess</title>
      <description>A presentation introducing reaccess an its
 use on a MEAN stack.</description>
      <link>https://insertafter.com/en/blog/reaccess.html</link>
      <pubDate>2014-10-01T11:44:58.000Z</pubDate>
    </item>



    <item>
      <title>Match IE8 With Rework And Gulp!</title>
      <description>Rework is a very powerful tool. It allows working with CSS contents
 in a friendly manner. Let&#39;s improve you IE8 compatibility with it.</description>
      <link>https://insertafter.com/en/blog/match_ie8_with_gulp_and_rework.html</link>
      <pubDate>2014-03-15T15:05:01.000Z</pubDate>
    </item>



    <item>
      <title>Detecting Bad JavaScript Performance Tests On JSPerf</title>
      <description>JSPerf gives us a simple way to write JavaScript performance tests.
 Unfortunately, tests found aren&#39;t always well designed. Here&#39;s how to detect
 and avoid them.</description>
      <link>https://insertafter.com/en/blog/jsperf_use_with_caution.html</link>
      <pubDate>2013-06-06T16:21:50.000Z</pubDate>
    </item>



    <item>
      <title>Revisiting The JavaScript Singleton Pattern</title>
      <description>JavaScript design patterns are quite good examples to sharp your
 JavaScript skills. Let&#39;s take a look to the singleton pattern.</description>
      <link>https://insertafter.com/en/blog/revisiting_js_singleton_pattern.html</link>
      <pubDate>2013-05-30T07:38:19.000Z</pubDate>
    </item>



    <item>
      <title>Easily Implement Stacks (Fifo) And Queues (Lifo) With JavaScript</title>
      <description>I&#39;m currently reviewing Javascript basis for a personnal project
 and it appears I often use stacks and queues implicitly. Let&#39;s make it
 explicit and easyer to debug/use.</description>
      <link>https://insertafter.com/en/blog/fifo_lifo_javascript.html</link>
      <pubDate>2013-04-09T09:50:52.000Z</pubDate>
    </item>





  </channel>
</rss>
